{"version":3,"file":"sat-popover.js","sources":["../../../node_modules/@angular/packages/cdk/esm5/bidi/directionality.js","../../../node_modules/@angular/packages/cdk/esm5/bidi/dir.js","../../../node_modules/@angular/packages/cdk/esm5/bidi/bidi-module.js","../../../src/lib/popover/popover.animations.ts","../../../src/lib/popover/notification.service.ts","../../../src/lib/popover/popover.errors.ts","../../../src/lib/popover/popover.component.ts","../../../src/lib/popover/popover-anchoring.service.ts","../../../src/lib/popover/popover-anchor.directive.ts","../../../src/lib/popover/popover.module.ts"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter, Injectable, Optional, Inject, InjectionToken, } from \"@angular/core\";\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n */\nexport var /** @type {?} */ DIR_DOCUMENT = new InjectionToken('cdk-dir-doc');\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nvar Directionality = /** @class */ (function () {\n    function Directionality(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            var /** @type {?} */ bodyDir = _document.body ? _document.body.dir : null;\n            var /** @type {?} */ htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = /** @type {?} */ ((bodyDir || htmlDir || 'ltr'));\n        }\n    }\n    Directionality.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Directionality.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] },] },\n    ]; };\n    return Directionality;\n}());\nexport { Directionality };\nfunction Directionality_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Directionality.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Directionality.ctorParameters;\n    /**\n     * The current 'ltr' or 'rtl' value.\n     * @type {?}\n     */\n    Directionality.prototype.value;\n    /**\n     * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n     * @type {?}\n     */\n    Directionality.prototype.change;\n}\n//# sourceMappingURL=directionality.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Output, Input, EventEmitter } from \"@angular/core\";\nimport { Directionality } from \"./directionality\";\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nvar Dir = /** @class */ (function () {\n    function Dir() {\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._dir; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            var /** @type {?} */ old = this._dir;\n            this._dir = v;\n            if (old !== this._dir && this._isInitialized) {\n                this.change.emit(this._dir);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        /** Current layout direction of the element. */\n        get: /**\n         * Current layout direction of the element.\n         * @return {?}\n         */\n        function () { return this.dir; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Initialize once default value has been set. */\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    Dir.prototype.ngAfterContentInit = /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n    };\n    Dir.decorators = [\n        { type: Directive, args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[dir]': 'dir' },\n                    exportAs: 'dir',\n                },] },\n    ];\n    /** @nocollapse */\n    Dir.ctorParameters = function () { return []; };\n    Dir.propDecorators = {\n        \"change\": [{ type: Output, args: ['dirChange',] },],\n        \"dir\": [{ type: Input, args: ['dir',] },],\n    };\n    return Dir;\n}());\nexport { Dir };\nfunction Dir_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Dir.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Dir.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    Dir.propDecorators;\n    /** @type {?} */\n    Dir.prototype._dir;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     */\n    Dir.prototype._isInitialized;\n    /**\n     * Event emitted when the direction changes.\n     * @type {?}\n     */\n    Dir.prototype.change;\n}\n//# sourceMappingURL=dir.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { Dir } from \"./dir\";\nimport { DIR_DOCUMENT, Directionality } from \"./directionality\";\nvar BidiModule = /** @class */ (function () {\n    function BidiModule() {\n    }\n    BidiModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                    providers: [\n                        { provide: DIR_DOCUMENT, useExisting: DOCUMENT },\n                        Directionality,\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    BidiModule.ctorParameters = function () { return []; };\n    return BidiModule;\n}());\nexport { BidiModule };\nfunction BidiModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BidiModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BidiModule.ctorParameters;\n}\n//# sourceMappingURL=bidi-module.js.map","import {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport const transformPopover: AnimationTriggerMetadata = trigger('transformPopover', [\n  transition(':enter', [\n    style({opacity: 0, transform: 'scale(0.3)'}),\n    animate('{{openTransition}}',\n      style({opacity: 1, transform: 'scale(1)'}))\n  ]),\n  transition(':leave', [\n    animate('{{closeTransition}}',\n      style({opacity: 0, transform: 'scale(0.5)'}))\n  ])\n]);\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/** Enumerated actions for a popover to perform. */\nexport enum NotificationAction {\n  /** Popover should open. */\n  OPEN,\n  /** Popover should close. */\n  CLOSE,\n  /** Popover should toggle open or closed. */\n  TOGGLE,\n  /** Popover has new target positions. */\n  REPOSITION,\n  /** Popover needs new configuration. */\n  UPDATE_CONFIG,\n}\n\n/** Event object for dispatching to anchor. */\nexport class PopoverNotification {\n  constructor(\n    /** Action to perform. */\n    public action: NotificationAction,\n    /** Optional payload. */\n    public value?: any\n  ) { }\n}\n\n@Injectable()\nexport class PopoverNotificationService {\n\n  private store = new Subject<PopoverNotification>();\n\n  /** Dispatch a notification to all subscribers. */\n  dispatch(notification: PopoverNotification) {\n    this.store.next(notification);\n  }\n\n  /** Stream of notification events. */\n  events(): Observable<PopoverNotification> {\n    return this.store.asObservable();\n  }\n\n  /** Complete event stream. */\n  dispose(): void {\n    this.store.complete();\n  }\n\n}\n","import { VALID_HORIZ_ALIGN, VALID_VERT_ALIGN, VALID_SCROLL } from './popover.component';\n\nexport function getInvalidPopoverError(): Error {\n  return Error('SatPopoverAnchor must be provided an SatPopover component instance.');\n}\n\nexport function getUnanchoredPopoverError(): Error {\n  return Error('SatPopover is not anchored to any SatPopoverAnchor.');\n}\n\nexport function getInvalidHorizontalAlignError(alignment): Error {\n  return Error(generateGenericError('horizontalAlign/xAlign', alignment, VALID_HORIZ_ALIGN));\n}\n\nexport function getInvalidVerticalAlignError(alignment): Error {\n  return Error(generateGenericError('verticalAlign/yAlign', alignment, VALID_VERT_ALIGN));\n}\n\nexport function getInvalidScrollStrategyError(strategy): Error {\n  return Error(generateGenericError('scrollStrategy', strategy, VALID_SCROLL));\n}\n\nfunction generateGenericError(apiName: string, invalid: any, valid: string[]): string {\n  return `Invalid ${apiName}: '${invalid}'. Valid options are ` +\n    `${valid.map(v => `'${v}'`).join(', ')}.`;\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  ViewChild,\n  ViewEncapsulation,\n  TemplateRef,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs/Subject';\n\nimport { transformPopover } from './popover.animations';\nimport {\n  NotificationAction,\n  PopoverNotification,\n  PopoverNotificationService,\n} from './notification.service';\nimport {\n  getUnanchoredPopoverError,\n  getInvalidHorizontalAlignError,\n  getInvalidVerticalAlignError,\n  getInvalidScrollStrategyError,\n} from './popover.errors';\n\nexport type SatPopoverScrollStrategy = 'noop' | 'block' | 'reposition' | 'close';\nexport type SatPopoverHorizontalAlign = 'before' | 'start' | 'center' | 'end' | 'after';\nexport type SatPopoverVerticalAlign = 'above'  | 'start' | 'center' | 'end' | 'below';\n\nexport const VALID_SCROLL: SatPopoverScrollStrategy[] = ['noop', 'block', 'reposition', 'close'];\nexport const VALID_HORIZ_ALIGN: SatPopoverHorizontalAlign[] =\n    ['before', 'start', 'center', 'end', 'after'];\nexport const VALID_VERT_ALIGN: SatPopoverVerticalAlign[] =\n    ['above', 'start', 'center', 'end', 'below'];\n\n// See http://cubic-bezier.com/#.25,.8,.25,1 for reference.\nconst DEFAULT_TRANSITION  = '200ms cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n@Component({\n  selector: 'sat-popover',\n  encapsulation: ViewEncapsulation.None,\n  animations: [transformPopover],\n  styleUrls: ['./popover.component.scss'],\n  templateUrl: './popover.component.html',\n})\nexport class SatPopover implements OnInit, OnDestroy {\n\n  /** Alignment of the popover on the horizontal axis. */\n  @Input()\n  get horizontalAlign() { return this._horizontalAlign; }\n  set horizontalAlign(val: SatPopoverHorizontalAlign) {\n    this._validateHorizontalAlign(val);\n    if (this._horizontalAlign !== val) {\n      this._horizontalAlign = val;\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n    }\n  }\n  private _horizontalAlign: SatPopoverHorizontalAlign = 'center';\n\n  /** Alignment of the popover on the x axis. Alias for `horizontalAlign`. */\n  @Input()\n  get xAlign() { return this.horizontalAlign; }\n  set xAlign(val: SatPopoverHorizontalAlign) { this.horizontalAlign = val; }\n\n  /** Alignment of the popover on the vertical axis. */\n  @Input()\n  get verticalAlign() { return this._verticalAlign; }\n  set verticalAlign(val: SatPopoverVerticalAlign) {\n    this._validateVerticalAlign(val);\n    if (this._verticalAlign !== val) {\n      this._verticalAlign = val;\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n    }\n  }\n  private _verticalAlign: SatPopoverVerticalAlign = 'center';\n\n  /** Alignment of the popover on the y axis. Alias for `verticalAlign`. */\n  @Input()\n  get yAlign() { return this.verticalAlign; }\n  set yAlign(val: SatPopoverVerticalAlign) { this.verticalAlign = val; }\n\n  /** Whether the popover always opens with the specified alignment. */\n  @Input()\n  get forceAlignment() { return this._forceAlignment; }\n  set forceAlignment(val: boolean) {\n    const coercedVal = coerceBooleanProperty(val);\n    if (this._forceAlignment !== coercedVal) {\n      this._forceAlignment = coercedVal;\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n    }\n  }\n  private _forceAlignment = false;\n\n  /**\n   * Whether the popover's alignment is locked after opening. This prevents the popover\n   * from changing its alignement when scrolling or changing the size of the viewport.\n   */\n  @Input()\n  get lockAlignment() { return this._lockAlignment; }\n  set lockAlignment(val: boolean) {\n    const coercedVal = coerceBooleanProperty(val);\n    if (this._lockAlignment !== coercedVal) {\n      this._lockAlignment = coerceBooleanProperty(val);\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n    }\n  }\n  private _lockAlignment = false;\n\n  /** Whether the first focusable element should be focused on open. */\n  @Input()\n  get autoFocus() { return this._autoFocus; }\n  set autoFocus(val: boolean) {\n    this._autoFocus = coerceBooleanProperty(val);\n  }\n  private _autoFocus = true;\n\n  /** How the popover should handle scrolling. */\n  @Input()\n  get scrollStrategy() { return this._scrollStrategy; }\n  set scrollStrategy(val: SatPopoverScrollStrategy) {\n    this._validateScrollStrategy(val);\n    if (this._scrollStrategy !== val) {\n      this._scrollStrategy = val;\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.UPDATE_CONFIG));\n    }\n  }\n  private _scrollStrategy: SatPopoverScrollStrategy = 'reposition';\n\n  /** Whether the popover should have a backdrop (includes closing on click). */\n  @Input()\n  get hasBackdrop() { return this._hasBackdrop; }\n  set hasBackdrop(val: boolean) {\n    this._hasBackdrop = coerceBooleanProperty(val);\n  }\n  private _hasBackdrop = false;\n\n  /** Whether the popover should close when the user clicks the backdrop or presses ESC. */\n  @Input()\n  get interactiveClose() { return this._interactiveClose; }\n  set interactiveClose(val: boolean) {\n    this._interactiveClose = coerceBooleanProperty(val);\n  }\n  private _interactiveClose = true;\n\n  /** Custom transition to use while opening. */\n  @Input()\n  get openTransition() { return this._openTransition; }\n  set openTransition(val: string) {\n    if (val) {\n      this._openTransition = val;\n    }\n  }\n  private _openTransition = DEFAULT_TRANSITION;\n\n  /** Custom transition to use while closing. */\n  @Input()\n  get closeTransition() { return this._closeTransition; }\n  set closeTransition(val: string) {\n    if (val) {\n      this._closeTransition = val;\n    }\n  }\n  private _closeTransition = DEFAULT_TRANSITION;\n\n  /** Optional backdrop class. */\n  @Input() backdropClass = '';\n\n  /** Emits when the popover is opened. */\n  @Output() opened = new EventEmitter<void>();\n\n  /** Emits when the popover is closed. */\n  @Output() closed = new EventEmitter<any>();\n\n  /** Emits when the popover has finished opening. */\n  @Output() afterOpen = new EventEmitter<void>();\n\n  /** Emits when the popover has finished closing. */\n  @Output() afterClose = new EventEmitter<void>();\n\n  /** Emits when the backdrop is clicked. */\n  @Output() backdropClicked = new EventEmitter<void>();\n\n  /** Emits when a keydown event is targeted to this popover's overlay. */\n  @Output() overlayKeydown = new EventEmitter<KeyboardEvent>();\n\n  /** Reference to template so it can be placed within a portal. */\n  @ViewChild(TemplateRef) _templateRef: TemplateRef<any>;\n\n  /** Classes to be added to the popover for setting the correct transform origin. */\n  _classList: any = {};\n\n  /** Whether the popover is presently open. */\n  _open = false;\n\n  /** Instance of notification service. Will be undefined until attached to an anchor. */\n  _notifications: PopoverNotificationService;\n\n  /** Reference to the element to build a focus trap around. */\n  @ViewChild('focusTrapElement')\n  private _focusTrapElement: ElementRef;\n\n  /** Reference to the element that was focused before opening. */\n  private _previouslyFocusedElement: HTMLElement;\n\n  /** Reference to a focus trap around the popover. */\n  private _focusTrap: FocusTrap;\n\n  constructor(\n    private _focusTrapFactory: FocusTrapFactory,\n    @Optional() @Inject(DOCUMENT) private _document: any\n  ) { }\n\n  ngOnInit() {\n    this._setAlignmentClasses();\n  }\n\n  ngOnDestroy() {\n    if (this._notifications) {\n      this._notifications.dispose();\n    }\n  }\n\n  /** Open this popover. */\n  open(): void {\n    const notification = new PopoverNotification(NotificationAction.OPEN);\n    this._dispatchActionNotification(notification);\n  }\n\n  /** Close this popover. */\n  close(value?: any): void {\n    const notification = new PopoverNotification(NotificationAction.CLOSE, value);\n    this._dispatchActionNotification(notification);\n  }\n\n  /** Toggle this popover open or closed. */\n  toggle(): void {\n    const notification = new PopoverNotification(NotificationAction.TOGGLE);\n    this._dispatchActionNotification(notification);\n  }\n\n  /** Gets whether the popover is presently open. */\n  isOpen(): boolean {\n    return this._open;\n  }\n\n  /** Gets an animation config with customized (or default) transition values. */\n  _getAnimation(): { value: any, params: any } {\n    return {\n      value: 'visible',\n      params: { openTransition: this.openTransition, closeTransition: this.closeTransition }\n    };\n  }\n\n  /** Callback for when the popover is finished animating in or out. */\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'visible') {\n      this._trapFocus();\n      this.afterOpen.emit();\n    } else if (event.toState === 'void') {\n      this._restoreFocus();\n      this.afterClose.emit();\n    }\n  }\n\n  /** Apply alignment classes based on alignment inputs. */\n  _setAlignmentClasses(horizAlign = this.horizontalAlign, vertAlign = this.verticalAlign) {\n    this._classList['sat-popover-before'] = horizAlign === 'before' || horizAlign === 'end';\n    this._classList['sat-popover-after']  = horizAlign === 'after' || horizAlign === 'start';\n\n    this._classList['sat-popover-above'] = vertAlign === 'above' || vertAlign === 'end';\n    this._classList['sat-popover-below'] = vertAlign === 'below' || vertAlign === 'start';\n\n    this._classList['sat-popover-center'] = horizAlign === 'center' || vertAlign === 'center';\n  }\n\n  /** Move the focus inside the focus trap and remember where to return later. */\n  private _trapFocus(): void {\n    this._savePreviouslyFocusedElement();\n\n    // There won't be a focus trap element if the close animation starts before open finishes\n    if (!this._focusTrapElement) {\n      return;\n    }\n\n    if (!this._focusTrap && this._focusTrapElement) {\n      this._focusTrap = this._focusTrapFactory.create(this._focusTrapElement.nativeElement);\n    }\n\n    if (this.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  /** Restore focus to the element focused before the popover opened. Also destroy trap. */\n  private _restoreFocus(): void {\n    const toFocus = this._previouslyFocusedElement;\n\n    // Must check active element is focusable for IE sake\n    if (toFocus && 'focus' in toFocus) {\n      this._previouslyFocusedElement.focus();\n    }\n\n    this._previouslyFocusedElement = null;\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n      this._focusTrap = undefined;\n    }\n  }\n\n  /** Save a reference to the element focused before the popover was opened. */\n  private _savePreviouslyFocusedElement(): void {\n    if (this._document) {\n      this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n    }\n  }\n\n  /** Dispatch a notification to the notification service, if possible. */\n  private _dispatchConfigNotification(notification: PopoverNotification) {\n    if (this._notifications) {\n      this._notifications.dispatch(notification);\n    }\n  }\n\n  /** Dispatch a notification to the notification service and throw if unable to. */\n  private _dispatchActionNotification(notification: PopoverNotification) {\n    if (!this._notifications) {\n      throw getUnanchoredPopoverError();\n    }\n\n    this._notifications.dispatch(notification);\n  }\n\n  /** Throws an error if the alignment is not a valid horizontalAlign. */\n  private _validateHorizontalAlign(pos: SatPopoverHorizontalAlign): void {\n    if (VALID_HORIZ_ALIGN.indexOf(pos) === -1) {\n      throw getInvalidHorizontalAlignError(pos);\n    }\n  }\n\n  /** Throws an error if the alignment is not a valid verticalAlign. */\n  private _validateVerticalAlign(pos: SatPopoverVerticalAlign): void {\n    if (VALID_VERT_ALIGN.indexOf(pos) === -1) {\n      throw getInvalidVerticalAlignError(pos);\n    }\n  }\n\n  /** Throws an error if the scroll strategy is not a valid strategy. */\n  private _validateScrollStrategy(strategy: SatPopoverScrollStrategy): void {\n    if (VALID_SCROLL.indexOf(strategy) === -1) {\n      throw getInvalidScrollStrategyError(strategy);\n    }\n  }\n}\n","import {\n  ElementRef,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  ConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayRef,\n  OverlayConfig,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { Directionality, Direction} from '@angular/cdk/bidi';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { take } from 'rxjs/operators/take';\nimport { filter } from 'rxjs/operators/filter';\nimport { tap } from 'rxjs/operators/tap';\n\nimport {\n  SatPopover,\n  SatPopoverHorizontalAlign,\n  SatPopoverVerticalAlign,\n  SatPopoverScrollStrategy,\n} from './popover.component';\nimport { PopoverNotificationService, NotificationAction } from './notification.service';\n\n/**\n * Configuration provided by the popover for the anchoring service\n * to build the correct overlay config.\n */\ninterface PopoverConfig {\n  horizontalAlign: SatPopoverHorizontalAlign;\n  verticalAlign: SatPopoverVerticalAlign;\n  hasBackdrop: boolean;\n  backdropClass: string;\n  scrollStrategy: SatPopoverScrollStrategy;\n  forceAlignment: boolean;\n  lockAlignment: boolean;\n}\n\n@Injectable()\nexport class PopoverAnchoringService implements OnDestroy {\n\n  /** Emits when the popover is opened. */\n  popoverOpened = new Subject<void>();\n\n  /** Emits when the popover is closed. */\n  popoverClosed = new Subject<void>();\n\n  /** Reference to the overlay containing the popover component. */\n  _overlayRef: OverlayRef;\n\n  /** Reference to the target popover. */\n  private _popover: SatPopover;\n\n  /** Reference to the view container for the popover template. */\n  private _viewContainerRef: ViewContainerRef;\n\n  /** Reference to the anchor element. */\n  private _anchor: ElementRef;\n\n  /** Reference to a template portal where the overlay will be attached. */\n  private _portal: TemplatePortal<any>;\n\n  /** Communications channel with the popover. */\n  private _notifications: PopoverNotificationService;\n\n  /** Single subscription to notifications service events. */\n  private _notificationsSubscription: Subscription;\n\n  /** Single subscription to position changes. */\n  private _positionChangeSubscription: Subscription;\n\n  /** Whether the popover is presently open. */\n  private _popoverOpen = false;\n\n  /** Emits when the directive is destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _ngZone: NgZone,\n    @Optional() private _dir: Directionality\n  ) { }\n\n  ngOnDestroy() {\n    // Destroy popover before terminating subscriptions so that any resulting\n    // detachments update 'closed state'\n    this._destroyPopover();\n\n    // Terminate subscriptions\n    if (this._notificationsSubscription) {\n      this._notificationsSubscription.unsubscribe();\n    }\n    if (this._positionChangeSubscription) {\n      this._positionChangeSubscription.unsubscribe();\n    }\n    this._onDestroy.next();\n    this._onDestroy.complete();\n\n    this.popoverOpened.complete();\n    this.popoverClosed.complete();\n  }\n\n  /** Anchor a popover instance to a view and connection element. */\n  anchor(popover: SatPopover, viewContainerRef: ViewContainerRef, anchor: ElementRef): void {\n    // Destroy any previous popovers\n    this._destroyPopover();\n\n    // Assign local refs\n    this._popover = popover;\n    this._viewContainerRef = viewContainerRef;\n    this._anchor = anchor;\n\n    // Provide notification service as a communication channel between popover and anchor.\n    // Then subscribe to notifications to take appropriate actions.\n    this._popover._notifications = this._notifications = new PopoverNotificationService();\n    this._subscribeToNotifications();\n  }\n\n  /** Gets whether the popover is presently open. */\n  isPopoverOpen(): boolean {\n    return this._popoverOpen;\n  }\n\n  /** Toggles the popover between the open and closed states. */\n  togglePopover(): void {\n    return this._popoverOpen ? this.closePopover() : this.openPopover();\n  }\n\n  /** Opens the popover. */\n  openPopover(): void {\n    if (!this._popoverOpen) {\n      this.createOverlay();\n      this._subscribeToBackdrop();\n      this._subscribeToEscape();\n      this._subscribeToDetachments();\n      this._saveOpenedState();\n    }\n  }\n\n  /** Closes the popover. */\n  closePopover(value?: any): void {\n    if (this._overlayRef) {\n      this._saveClosedState(value);\n      this._overlayRef.detach();\n    }\n  }\n\n  /** Create an overlay to be attached to the portal. */\n  createOverlay(): OverlayRef {\n    // Create overlay if it doesn't yet exist\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this._popover._templateRef, this._viewContainerRef);\n\n      const popoverConfig = {\n        horizontalAlign: this._popover.horizontalAlign,\n        verticalAlign: this._popover.verticalAlign,\n        hasBackdrop: this._popover.hasBackdrop,\n        backdropClass: this._popover.backdropClass,\n        scrollStrategy: this._popover.scrollStrategy,\n        forceAlignment: this._popover.forceAlignment,\n        lockAlignment: this._popover.lockAlignment,\n      };\n\n      const overlayConfig = this._getOverlayConfig(popoverConfig, this._anchor);\n\n      this._subscribeToPositionChanges(overlayConfig.positionStrategy as ConnectedPositionStrategy);\n\n      this._overlayRef = this._overlay.create(overlayConfig);\n    }\n\n    // Actually open the popover\n    this._overlayRef.attach(this._portal);\n    return this._overlayRef;\n  }\n\n\n  /** Removes the popover from the DOM. Does NOT update open state. */\n  private _destroyPopover(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  /**\n   * Destroys the popover immediately if it is closed, or waits until it\n   * has been closed to destroy it.\n   */\n  private _destroyPopoverOnceClosed(): void {\n    if (this.isPopoverOpen() && this._overlayRef) {\n      this._overlayRef.detachments().pipe(\n        take(1),\n        takeUntil(this._onDestroy)\n      ).subscribe(() => this._destroyPopover());\n    } else {\n      this._destroyPopover();\n    }\n  }\n\n  /**\n   * Call appropriate anchor method when an event is dispatched through\n   * the notification service.\n   */\n  private _subscribeToNotifications(): void {\n    if (this._notificationsSubscription) {\n      this._notificationsSubscription.unsubscribe();\n    }\n\n    this._notificationsSubscription = this._notifications.events()\n      .subscribe(event => {\n        switch (event.action) {\n          case NotificationAction.OPEN:\n            this.openPopover();\n            break;\n          case NotificationAction.CLOSE:\n            this.closePopover(event.value);\n            break;\n          case NotificationAction.TOGGLE:\n            this.togglePopover();\n            break;\n          case NotificationAction.REPOSITION:\n            // TODO: When the overlay's position can be dynamically changed, do not destroy\n          case NotificationAction.UPDATE_CONFIG:\n            this._destroyPopoverOnceClosed();\n            break;\n        }\n      });\n  }\n\n  /** Close popover when backdrop is clicked. */\n  private _subscribeToBackdrop(): void {\n    this._overlayRef\n      .backdropClick()\n      .pipe(\n        tap(() => this._popover.backdropClicked.emit()),\n        filter(() => this._popover.interactiveClose),\n        takeUntil(this.popoverClosed),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(() => this.closePopover());\n  }\n\n  /** Close popover when escape keydown event occurs. */\n  private _subscribeToEscape(): void {\n    this._overlayRef\n      .keydownEvents()\n      .pipe(\n        tap(event => this._popover.overlayKeydown.emit(event)),\n        filter(event => event.keyCode === ESCAPE),\n        filter(() => this._popover.interactiveClose),\n        takeUntil(this.popoverClosed),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(() => this.closePopover());\n  }\n\n  /** Set state back to closed when detached. */\n  private _subscribeToDetachments(): void {\n    this._overlayRef\n      .detachments()\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => this._saveClosedState());\n  }\n\n  /** Save the opened state of the popover and emit. */\n  private _saveOpenedState(): void {\n    if (!this._popoverOpen) {\n      this._popover._open = this._popoverOpen = true;\n\n      this.popoverOpened.next();\n      this._popover.opened.emit();\n    }\n  }\n\n  /** Save the closed state of the popover and emit. */\n  private _saveClosedState(value?: any): void {\n    if (this._popoverOpen) {\n      this._popover._open = this._popoverOpen = false;\n\n      this.popoverClosed.next(value);\n      this._popover.closed.emit(value);\n    }\n  }\n\n  /** Gets the text direction of the containing app. */\n  private _getDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Create and return a config for creating the overlay. */\n  private _getOverlayConfig(config: PopoverConfig, anchor: ElementRef): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getPositionStrategy(\n        config.horizontalAlign,\n        config.verticalAlign,\n        config.forceAlignment,\n        config.lockAlignment,\n        anchor,\n      ),\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._getScrollStrategyInstance(config.scrollStrategy),\n      direction: this._getDirection(),\n    });\n  }\n\n  /**\n   * Listen to changes in the position of the overlay and set the correct alignment classes,\n   * ensuring that the animation origin is correct, even with a fallback position.\n   */\n  private _subscribeToPositionChanges(position: ConnectedPositionStrategy): void {\n    if (this._positionChangeSubscription) {\n      this._positionChangeSubscription.unsubscribe();\n    }\n\n    this._positionChangeSubscription = position.onPositionChange\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(change => {\n        // Position changes may occur outside the Angular zone\n        this._ngZone.run(() => {\n          this._popover._setAlignmentClasses(\n            getHorizontalPopoverAlignment(change.connectionPair.overlayX),\n            getVerticalPopoverAlignment(change.connectionPair.overlayY),\n          );\n        });\n      });\n  }\n\n  /** Map a scroll strategy string type to an instance of a scroll strategy. */\n  private _getScrollStrategyInstance(strategy: SatPopoverScrollStrategy): ScrollStrategy {\n    switch (strategy) {\n      case 'block':\n        return this._overlay.scrollStrategies.block();\n      case 'reposition':\n        return this._overlay.scrollStrategies.reposition();\n      case 'close':\n        return this._overlay.scrollStrategies.close();\n      case 'noop':\n      default:\n        return this._overlay.scrollStrategies.noop();\n    }\n  }\n\n  /** Create and return a position strategy based on config provided to the component instance. */\n  private _getPositionStrategy(\n    horizontalTarget: SatPopoverHorizontalAlign,\n    verticalTarget: SatPopoverVerticalAlign,\n    forceAlignment: boolean,\n    lockAlignment: boolean,\n    anchor: ElementRef,\n  ): ConnectedPositionStrategy {\n    // Attach the overlay at the preferred position\n    const {originX, overlayX} = getHorizontalConnectionPosPair(horizontalTarget);\n    const {originY, overlayY} = getVerticalConnectionPosPair(verticalTarget);\n    const strategy = this._overlay.position()\n      .connectedTo(anchor, {originX, originY}, {overlayX, overlayY})\n      .withDirection(this._getDirection())\n      .withLockedPosition(lockAlignment);\n\n    // Unless the alignment is forced, add fallbacks based on the preferred positions\n    if (!forceAlignment) {\n      this._addFallbacks(strategy, horizontalTarget, verticalTarget);\n    }\n\n    return strategy;\n  }\n\n  /** Add fallbacks to a given strategy based around target alignments. */\n  private _addFallbacks(\n    strategy: ConnectedPositionStrategy,\n    hTarget: SatPopoverHorizontalAlign,\n    vTarget: SatPopoverVerticalAlign\n  ): void {\n    // Determine if the target alignments overlap the anchor\n    const horizontalOverlapAllowed = hTarget !== 'before' && hTarget !== 'after';\n    const verticalOverlapAllowed = vTarget !== 'above' && vTarget !== 'below';\n\n    // If a target alignment doesn't cover the anchor, don't let any of the fallback alignments\n    // cover the anchor\n    const possibleHorizontalAlignments = horizontalOverlapAllowed ?\n      ['before', 'start', 'center', 'end', 'after'] :\n      ['before', 'after'];\n    const possibleVerticalAlignments = verticalOverlapAllowed ?\n      ['above', 'start', 'center', 'end', 'below'] :\n      ['above', 'below'];\n\n    // Create fallbacks for each allowed prioritized fallback alignment combo\n    const fallbacks = [];\n    prioritizeAroundTarget(hTarget, possibleHorizontalAlignments).forEach(h => {\n      prioritizeAroundTarget(vTarget, possibleVerticalAlignments).forEach(v => {\n        fallbacks.push({h, v});\n      });\n    });\n\n    // Remove the first fallback since it will be the target alignment that is already applied\n    fallbacks.slice(1, fallbacks.length)\n      .forEach(({h, v}) => this._applyFallback(strategy, h, v));\n  }\n\n  /**\n  * Convert a specific horizontal and vertical alignment into a fallback and apply it to\n  * the strategy.\n  */\n  private _applyFallback(strategy, horizontalAlign, verticalAlign): void {\n    const {originX, overlayX} = getHorizontalConnectionPosPair(horizontalAlign);\n    const {originY, overlayY} = getVerticalConnectionPosPair(verticalAlign);\n    strategy.withFallbackPosition({originX, originY}, {overlayX, overlayY});\n  }\n\n\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getHorizontalPopoverAlignment(h: HorizontalConnectionPos): SatPopoverHorizontalAlign {\n  if (h === 'start') {\n    return 'after';\n  }\n\n  if (h === 'end') {\n    return 'before';\n  }\n\n  return 'center';\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getVerticalPopoverAlignment(v: VerticalConnectionPos): SatPopoverVerticalAlign {\n  if (v === 'top') {\n    return 'below';\n  }\n\n  if (v === 'bottom') {\n    return 'above';\n  }\n\n  return 'center';\n}\n\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getHorizontalConnectionPosPair(h: SatPopoverHorizontalAlign):\n    {originX: HorizontalConnectionPos, overlayX: HorizontalConnectionPos} {\n  switch (h) {\n    case 'before':\n      return {originX: 'start', overlayX: 'end'};\n    case 'start':\n      return {originX: 'start', overlayX: 'start'};\n    case 'end':\n      return {originX: 'end', overlayX: 'end'};\n    case 'after':\n      return {originX: 'end', overlayX: 'start'};\n    default:\n      return {originX: 'center', overlayX: 'center'};\n  }\n}\n\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getVerticalConnectionPosPair(v: SatPopoverVerticalAlign):\n    {originY: VerticalConnectionPos, overlayY: VerticalConnectionPos} {\n  switch (v) {\n    case 'above':\n      return {originY: 'top', overlayY: 'bottom'};\n    case 'start':\n      return {originY: 'top', overlayY: 'top'};\n    case 'end':\n      return {originY: 'bottom', overlayY: 'bottom'};\n    case 'below':\n      return {originY: 'bottom', overlayY: 'top'};\n    default:\n      return {originY: 'center', overlayY: 'center'};\n  }\n}\n\n\n/**\n * Helper function that takes an ordered array options and returns a reorderded\n * array around the target item. e.g.:\n *\n * target: 3; options: [1, 2, 3, 4, 5, 6, 7];\n *\n * return: [3, 4, 2, 5, 1, 6, 7]\n */\nfunction prioritizeAroundTarget<T>(target: T, options: T[]): T[] {\n  const targetIndex = options.indexOf(target);\n\n  // Set the first item to be the target\n  const reordered = [target];\n\n  // Make left and right stacks where the highest priority item is last\n  const left = options.slice(0, targetIndex);\n  const right = options.slice(targetIndex + 1, options.length).reverse();\n\n  // Alternate between stacks until one is empty\n  while (left.length && right.length) {\n    reordered.push(right.pop());\n    reordered.push(left.pop());\n  }\n\n  // Flush out right side\n  while (right.length) {\n    reordered.push(right.pop());\n  }\n\n  // Flush out left side\n  while (left.length) {\n    reordered.push(left.pop());\n  }\n\n  return reordered;\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { merge } from 'rxjs/observable/merge';\nimport { tap } from 'rxjs/operators/tap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\n\nimport { SatPopover } from './popover.component';\nimport { getInvalidPopoverError } from './popover.errors';\nimport { PopoverAnchoringService } from './popover-anchoring.service';\n\n@Directive({\n  selector: '[satPopoverAnchorFor]',\n  exportAs: 'satPopoverAnchor',\n  providers: [PopoverAnchoringService],\n})\nexport class SatPopoverAnchor implements OnInit, OnDestroy {\n\n  /** Reference to the popover instance. */\n  @Input('satPopoverAnchorFor')\n  get attachedPopover() { return this._attachedPopover; }\n  set attachedPopover(value: SatPopover) {\n    this._validateAttachedPopover(value);\n    this._attachedPopover = value;\n    // Anchor the popover to the element ref\n    this._anchoring.anchor(this.attachedPopover, this._viewContainerRef, this._elementRef);\n  }\n  private _attachedPopover: SatPopover;\n\n  /** Emits when the popover is opened. */\n  @Output() popoverOpened = new EventEmitter<void>();\n\n  /** Emits when the popover is closed. */\n  @Output() popoverClosed = new EventEmitter<any>();\n\n  /** Gets whether the popover is presently open. */\n  isPopoverOpen(): boolean {\n    return this._anchoring.isPopoverOpen();\n  }\n\n  /** Emits when the directive is destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewContainerRef: ViewContainerRef,\n    public _anchoring: PopoverAnchoringService,\n  ) { }\n\n  ngOnInit() {\n    // Re-emit open and close events\n    const opened$ = this._anchoring.popoverOpened\n      .pipe(tap(() => this.popoverOpened.emit()));\n    const closed$ = this._anchoring.popoverClosed\n      .pipe(tap(value => this.popoverClosed.emit(value)));\n    merge(opened$, closed$).pipe(takeUntil(this._onDestroy)).subscribe();\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  /** Toggles the popover between the open and closed states. */\n  togglePopover(): void {\n    this._anchoring.togglePopover();\n  }\n\n  /** Opens the popover. */\n  openPopover(): void {\n    this._anchoring.openPopover();\n  }\n\n  /** Closes the popover. */\n  closePopover(value?: any): void {\n    this._anchoring.closePopover(value);\n  }\n\n  /** Throws an error if the popover instance is not provided. */\n  private _validateAttachedPopover(popover: SatPopover): void {\n    if (!popover || !(popover instanceof SatPopover)) {\n      throw getInvalidPopoverError();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nimport { SatPopover } from './popover.component';\nimport { SatPopoverAnchor } from './popover-anchor.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    A11yModule,\n    BidiModule,\n  ],\n  declarations: [\n    SatPopover,\n    SatPopoverAnchor,\n  ],\n  exports: [\n    SatPopover,\n    SatPopoverAnchor,\n    BidiModule,\n  ]\n})\nexport class SatPopoverModule { }\n"],"names":["Subject","DOCUMENT","take","takeUntil","tap","filter","merge"],"mappings":"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"}